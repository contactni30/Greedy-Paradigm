package practice2;

import java.util.Comparator;
import java.util.PriorityQueue;

public class HuffmanCoding {

	// solution in cormen
	// a - 0
	// b - 1 0 1
	// c - 1 0 0
	// d - 1 1 1
	// e - 1 1 0 1
	// f - 1 1 0 0
	
	static class HuffmanNode{
		char c;
		int freq;
		HuffmanNode left;
		HuffmanNode right;
	}
	
	static class MyComparator implements Comparator<HuffmanCoding.HuffmanNode>{

		@Override
		public int compare(HuffmanNode o1, HuffmanNode o2) {
			// TODO Auto-generated method stub
			return o1.freq-o2.freq;
		}
		
	}
	
	public static void main(String args[]) {
		char[] character = new char[] {'a','b','c','d','e','f'};
		int[] freq = new int[] {45,13,12,16,9,5};
		
		int len = freq.length;
		
		PriorityQueue<HuffmanNode> p = new PriorityQueue<HuffmanNode>(len,new MyComparator());
		
		for(int i=0;i<len;i++) {
			HuffmanNode hn = new HuffmanNode();
			hn.c = character[i];
			hn.freq = freq[i];
			hn.left = null;
			hn.right = null;
			
			p.add(hn);
		}
		
		HuffmanNode root = new HuffmanNode();
		
		while(p.size()>1) {
			HuffmanNode x = p.poll();
			HuffmanNode y = p.poll();
			
			HuffmanNode z = new HuffmanNode();
			z.c = '-';
			z.freq = x.freq + y.freq;
			z.left = x;
			z.right = y;
			
			root = z;
			p.add(z);
		}
		
		String s = "";
		printCode(root,'f',s);
	}
	
	public static void printCode(HuffmanNode root, char ch, String s) {
		if(root.c == ch) {
			System.out.println("Codeword for character "+ ch + " is : "+ s);
		}else if(root.left == null && root.right ==null){
			System.out.print("");
		}else {
			printCode(root.left,ch,s+" 0");
			printCode(root.right,ch,s+" 1");
		}
	}
	
	
}
